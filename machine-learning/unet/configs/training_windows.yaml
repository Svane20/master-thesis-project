# @package _global_

# Global configuration
scratch:
  resolution: 512

# Dataset configuration
dataset:
  name: "synthetic-data"
  root: "D:/OneDrive/Master Thesis/datasets/processed"
  batch_size: 16
  pin_memory: true
  train:
    num_workers: 4
    shuffle: true
    drop_last: true
  val:
    num_workers: 4
    shuffle: false
    drop_last: false

# Training configuration
training:
  max_epochs: 100
  warmup_epochs: 2
  accelerator: cuda
  seed: 42
  compile_model: false

  # Criterion configuration
  criterion:
    losses: [ "unknown_l1_loss", "known_l1_loss", "gradient_loss", "laplacian_pha_loss" ]
    normalize_weights: true
    weight_dict:
      unknown_l1_loss: 1.0
      known_l1_loss: 0.1
      gradient_loss: 0.5
      laplacian_pha_loss: 0.7

  # Optimizer configuration
  optimizer:
    name: "AdamW"
    lr: 4e-4
    weight_decay: 1.0e-7
    amp:
      enabled: true
      amp_dtype: float16
    gradient_clip:
      enabled: true
      max_norm: 0.1
      norm_type: 2

  # Scheduler configuration
  scheduler:
    name: "CosineAnnealingLR"
    enabled: true
    parameters:
      eta_min: 1.0e-7

  # Early stopping configuration
  early_stopping:
    enabled: true
    verbose: true
    patience: 30
    min_delta: 0.0
    monitor: "mae"
    mode: "min"

  # Logging configuration
  logging:
    wandb:
      enabled: true
      project: "U-NET"
      entity: "svane20-keyshot"
      tags: [ "unet", "resnet-34", "synthetic-data" ]
      notes: "Training U-Net with ResNet-34 backbone on synthetic data."
      group: "unet"
      job_type: "training"
    log_metrics: false
    log_freq: 10
    log_images_freq: 10
    image_log_count: 8

  # Checkpoint configuration
  checkpoint:
    save_directory: "D:/OneDrive/Master Thesis/ml/checkpoints/unet"
    save_freq: 5
    checkpoint_path: "unet_v1.pt"
    resume_from: null # "D:/OneDrive/Master Thesis/ml/checkpoints/unet/<CHECKPOINT>" or null

# Model configuration
model:
  encoder:
    pretrained: true
  decoder:
    encoder_channels: [ 64, 64, 128, 256, 512 ]
    decoder_channels: [ 256, 128, 64, 64 ]
    final_channels: 64